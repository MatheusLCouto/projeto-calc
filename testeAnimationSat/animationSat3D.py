"""import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation
import warnings

fig = plt.figure(figsize=(12, 8))
ax = fig.add_subplot(221, projection='3d')

interv = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]
x = [402.50102448915874, 128.27794256293183, -146.49987319149832, -420.64419733696866, -692.969903203083, -962.3001935801228, -1227.4719623813946, -1487.340199540822, -1740.7840743339627, -1986.7111123905756, -2224.0621196849374, -2451.815757392213, -2668.9929260753693, -2874.6609401126234, -3067.937475156752, -3247.9942733602998, -3414.060593057743, -3565.426391524365, -3701.4452312938847, -3821.536902278614, -3925.189817456376, -4011.9627826816914, -4081.4871526698066, -4133.467979571559, -4167.685224268594, -4183.994590371184, -4182.328056161871, -4162.694105160303, -4125.177625256153, -4069.939652708428, -3997.2165551010044, -3907.3191587873016, -3800.6314752858684, -3677.609156274704, -3538.7776609939833, -3384.7301396054595, -3216.125036745414, -3033.683420350185, -2838.186041840943, -2630.470134922066, -2411.4259615735164]
y = [6811.618334492851, 6875.051976166215, 6908.75362459122, 6912.581335102957, 6886.523289032201, 6830.697772305336, 6745.352485625983, 6630.863574246685, 6487.733478054017, 6316.588760639514, 6118.1771241827455, 5893.3639342459755, 5643.128230140291, 5368.5582465201705, 5070.846474084167, 4751.284289049641, 4411.256182427306, 4052.2336210579724, 3675.768572910083, 3283.4867293052484, 2877.080179722664, 2458.3012247598135, 2028.9532454621324, 1590.8841151225456, 1145.9781146361465, 696.147998206614, 243.3269694827932, -210.53940457206406, -663.5016184697837, -1113.613144834324, -1558.940373516592, -1997.5694668677618, -2427.6146680377283, -2847.226210269086, -3254.5981046404195, -3647.9757787357735, -4025.663538003042, -4386.031820798658, -4727.524217365056, -5048.6642223322015, -5348.061689823124]
z = [1179.5665736218828, 821.6400331736507, 460.1504055032978, 96.66554371598431, -267.23843596734713, -629.9841355974721, -990.0000940534741, -1345.7267621955746, -1695.624816960202, -2038.180946818964, -2371.9147049365793, -2695.384944346965, -3007.1960475358655, -3306.0039224289244, -3590.5217390709745, -3859.5253836957722, -4111.858609364713, -4346.437864839624, -4562.256785797209, -4758.390334840161, -4933.998689666545, -5088.330191392801, -5220.7250781319835, -5330.617640680217, -5417.538598645226, -5481.11695881704, -5521.081478104275, -5537.261729382119, -5529.588756049899, -5498.095377601787, -5442.916028709271, -5364.28623495925, -5262.541688570885, -5138.1169239016035, -4991.543597072694, -4823.448371882165, -4634.550415035654, -4425.658504793776, -4197.667758427244, -3951.5559853889345, -3688.379674855801]

line, = ax.plot([], [], [], color='purple')

raio_terra = 6371.0
u = np.linspace(0, 2 * np.pi, 100)
v = np.linspace(0, np.pi, 100)
x_terra = raio_terra * np.outer(np.cos(u), np.sin(v))
y_terra = raio_terra * np.outer(np.sin(u), np.sin(v))
z_terra = raio_terra * np.outer(np.ones(np.size(u)), np.cos(v))
ax.plot_surface(x_terra, y_terra, z_terra, color='blue', alpha=1)

point, = ax.plot([], [], [], marker='o', color='red', markersize=2)

def update(frame):
    # Atualiza a posição do ponto
    print(frame)
    point.set_data(x[frame], y[frame])
    point.set_3d_properties(z[frame])
    print(x[frame], y[frame], z[frame])
    line.set_data(x[:frame + 1], y[:frame + 1])
    line.set_3d_properties(z[:frame + 1])
    print(point, line)

    return point, line

ani = animation.FuncAnimation(fig, update, frames=len(interv), interval=100)

ax.set_aspect('equal')
with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    plt.show()"""
import matplotlib
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation
import warnings

def createFigOrb(x, y, z, typeOrb, id, interv):
    fig = plt.figure(figsize=(12, 8))
    ax = fig.add_subplot(id, projection='3d')

    ax.plot(x, y, z, color='r')
    ax.set_xlabel('X')
    ax.set_ylabel('Y')
    ax.set_zlabel('Z')
    ax.set_title(f'Órbita do Satélite {typeOrb}')

    raio_terra = 6371.0
    u = np.linspace(0, 2 * np.pi, 100)
    v = np.linspace(0, np.pi, 100)
    x_terra = raio_terra * np.outer(np.cos(u), np.sin(v))
    y_terra = raio_terra * np.outer(np.sin(u), np.sin(v))
    z_terra = raio_terra * np.outer(np.ones(np.size(u)), np.cos(v))
    ax.plot_surface(x_terra, y_terra, z_terra, color='blue', alpha=1)

    return fig, ax

def updateFrame(frame, x, y, z, point, line):
    # Atualiza a posição do ponto
    point.set_data(x[frame], y[frame])
    point.set_3d_properties(z[frame])
    line.set_data(x[:frame + 1], y[:frame + 1])
    line.set_3d_properties(z[:frame + 1])

    return point, line

def plotOrb(fig3, fig4, interv, xPrev, yPrev, zPrev, xReal, yReal, zReal):
    fig1, ax1 = createFigOrb(xPrev, yPrev, zPrev, "Prev", 221, interv)
    fig2, ax2 = createFigOrb(xReal, yReal, zReal, "Real", 222, interv)

    line, = ax1.plot([], [], [], color='purple')
    point, = ax1.plot([], [], [], marker='o', color='red', markersize=2)

    up1 = updateFrame(interv, xPrev, yPrev, zPrev, point, line)
    up2 = updateFrame(interv, xReal, yReal, zReal, point, line)

    fig3.grid(True)
    fig4.grid(True)

    ani1 = animation.FuncAnimation(fig1, up1, frames=len(interv), interval=100)
    ani2 = animation.FuncAnimation(fig2, up2, frames=len(interv), interval=100)

    ax1.set_aspect('equal')
    ax2.set_aspect('equal')

    plt.show()

interv = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]
xPrev = [402.50102448915874, 128.27794256293183, -146.49987319149832, -420.64419733696866, -692.969903203083, -962.3001935801228, -1227.4719623813946, -1487.340199540822, -1740.7840743339627, -1986.7111123905756, -2224.0621196849374, -2451.815757392213, -2668.9929260753693, -2874.6609401126234, -3067.937475156752, -3247.9942733602998, -3414.060593057743, -3565.426391524365, -3701.4452312938847, -3821.536902278614, -3925.189817456376, -4011.9627826816914, -4081.4871526698066, -4133.467979571559, -4167.685224268594, -4183.994590371184, -4182.328056161871, -4162.694105160303, -4125.177625256153, -4069.939652708428, -3997.2165551010044, -3907.3191587873016, -3800.6314752858684, -3677.609156274704, -3538.7776609939833, -3384.7301396054595, -3216.125036745414, -3033.683420350185, -2838.186041840943, -2630.470134922066, -2411.4259615735164]
yPrev = [6811.618334492851, 6875.051976166215, 6908.75362459122, 6912.581335102957, 6886.523289032201, 6830.697772305336, 6745.352485625983, 6630.863574246685, 6487.733478054017, 6316.588760639514, 6118.1771241827455, 5893.3639342459755, 5643.128230140291, 5368.5582465201705, 5070.846474084167, 4751.284289049641, 4411.256182427306, 4052.2336210579724, 3675.768572910083, 3283.4867293052484, 2877.080179722664, 2458.3012247598135, 2028.9532454621324, 1590.8841151225456, 1145.9781146361465, 696.147998206614, 243.3269694827932, -210.53940457206406, -663.5016184697837, -1113.613144834324, -1558.940373516592, -1997.5694668677618, -2427.6146680377283, -2847.226210269086, -3254.5981046404195, -3647.9757787357735, -4025.663538003042, -4386.031820798658, -4727.524217365056, -5048.6642223322015, -5348.061689823124]
zPrev = [1179.5665736218828, 821.6400331736507, 460.1504055032978, 96.66554371598431, -267.23843596734713, -629.9841355974721, -990.0000940534741, -1345.7267621955746, -1695.624816960202, -2038.180946818964, -2371.9147049365793, -2695.384944346965, -3007.1960475358655, -3306.0039224289244, -3590.5217390709745, -3859.5253836957722, -4111.858609364713, -4346.437864839624, -4562.256785797209, -4758.390334840161, -4933.998689666545, -5088.330191392801, -5220.7250781319835, -5330.617640680217, -5417.538598645226, -5481.11695881704, -5521.081478104275, -5537.261729382119, -5529.588756049899, -5498.095377601787, -5442.916028709271, -5364.28623495925, -5262.541688570885, -5138.1169239016035, -4991.543597072694, -4823.448371882165, -4634.550415035654, -4425.658504793776, -4197.667758427244, -3951.5559853889345, -3688.379674855801]

xReal = [402.50102448915874, 128.27794256293183, -146.49987319149832, -420.64419733696866, -692.969903203083, -962.3001935801228, -1227.4719623813946, -1487.340199540822, -1740.7840743339627, -1986.7111123905756, -2224.0621196849374, -2451.815757392213, -2668.9929260753693, -2874.6609401126234, -3067.937475156752, -3247.9942733602998, -3414.060593057743, -3565.426391524365, -3701.4452312938847, -3821.536902278614, -3925.189817456376, -4011.9627826816914, -4081.4871526698066, -4133.467979571559, -4167.685224268594, -4183.994590371184, -4182.328056161871, -4162.694105160303, -4125.177625256153, -4069.939652708428, -3997.2165551010044, -3907.3191587873016, -3800.6314752858684, -3677.609156274704, -3538.7776609939833, -3384.7301396054595, -3216.125036745414, -3033.683420350185, -2838.186041840943, -2630.470134922066, -2411.4259615735164]
yReal = [6811.618334492851, 6875.051976166215, 6908.75362459122, 6912.581335102957, 6886.523289032201, 6830.697772305336, 6745.352485625983, 6630.863574246685, 6487.733478054017, 6316.588760639514, 6118.1771241827455, 5893.3639342459755, 5643.128230140291, 5368.5582465201705, 5070.846474084167, 4751.284289049641, 4411.256182427306, 4052.2336210579724, 3675.768572910083, 3283.4867293052484, 2877.080179722664, 2458.3012247598135, 2028.9532454621324, 1590.8841151225456, 1145.9781146361465, 696.147998206614, 243.3269694827932, -210.53940457206406, -663.5016184697837, -1113.613144834324, -1558.940373516592, -1997.5694668677618, -2427.6146680377283, -2847.226210269086, -3254.5981046404195, -3647.9757787357735, -4025.663538003042, -4386.031820798658, -4727.524217365056, -5048.6642223322015, -5348.061689823124]
zReal = [1179.5665736218828, 821.6400331736507, 460.1504055032978, 96.66554371598431, -267.23843596734713, -629.9841355974721, -990.0000940534741, -1345.7267621955746, -1695.624816960202, -2038.180946818964, -2371.9147049365793, -2695.384944346965, -3007.1960475358655, -3306.0039224289244, -3590.5217390709745, -3859.5253836957722, -4111.858609364713, -4346.437864839624, -4562.256785797209, -4758.390334840161, -4933.998689666545, -5088.330191392801, -5220.7250781319835, -5330.617640680217, -5417.538598645226, -5481.11695881704, -5521.081478104275, -5537.261729382119, -5529.588756049899, -5498.095377601787, -5442.916028709271, -5364.28623495925, -5262.541688570885, -5138.1169239016035, -4991.5559853889345, -4823.448371882165, -4634.550415035654, -4425.658504793776, -4197.667758427244, -3951.5559853889345, -3688.379674855801]

warnings.filterwarnings("ignore", category=matplotlib.cbook.mplDeprecation)

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax.plot3D(xPrev, yPrev, zPrev, 'blue', label='Predicted')
ax.plot3D(xReal, yReal, zReal, 'red', label='Real')
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('Z')
ax.set_title('Predicted vs Real Trajectory')
ax.legend()
plt.show()
